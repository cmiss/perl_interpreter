

CMAKE_MINIMUM_REQUIRED( VERSION 2.6.2 )

# Need some way of getting CMISS_ROOT defined otherwise we are in trouble.
IF( NOT DEFINED CMISS_ROOT )
  IF( NOT EXISTS $ENV{CMISS_ROOT} )
    MESSAGE( FATAL_ERROR "Dude there is no CMISS_ROOT environment/command
		line variable set" )
  ELSE( NOT EXISTS $ENV{CMISS_ROOT} )
    FILE( TO_CMAKE_PATH "$ENV{CMISS_ROOT}" CMISS_ROOT_LOCATION )
  ENDIF( NOT EXISTS $ENV{CMISS_ROOT} )
ELSE( NOT DEFINED CMISS_ROOT )
  FILE( TO_CMAKE_PATH "${CMISS_ROOT}" CMISS_ROOT_LOCATION )
ENDIF( NOT DEFINED CMISS_ROOT )

#INCLUDE( $ENV{CMISS_ROOT}/cmake/Modules/CMGUIMacros.cmake )
INCLUDE( PerlInterpreterMacros.cmake )

PROJECT( "perl_interpreter" )

SET( LIBRARY_NAME "perlinterpreter" )

IF( NOT DEFINED TASK )
	ADD_CUSTOM_TARGET( START_PERL_INTERPRETER_BUILD ALL
		COMMAND ${CMAKE_COMMAND} -DTASK=INIT -DUSE_DYNAMIC_LOADER=FALSE -DSHARED_OBJECT=TRUE ${CMAKE_SOURCE_DIR} 
		COMMAND make
		COMMENT "Initialising perl interpreter build" )
ELSE( NOT DEFINED TASK )
	
	IF( NOT DEFINED CMISS_PERL )
		FIND_PACKAGE( Perl REQUIRED )
	ELSE( NOT DEFINED CMISS_PERL )
		SET( PERL_EXECUTABLE ${CMISS_PERL} )
	ENDIF( NOT DEFINED CMISS_PERL )
	
	IF( NOT DEFINED USE_DYNAMIC_LOADER )
		SET( USE_DYNAMIC_LOADER "MAYBE" )
	ENDIF( NOT DEFINED USE_DYNAMIC_LOADER )
	IF( NOT DEFINED SHARED_OBJECT )
		SET( SHARED_OBJECT FALSE )
	ENDIF( NOT DEFINED SHARED_OBJECT )
	IF( NOT DEFINED INCLUDE_PERL )
		SET( INCLUDE_PERL FALSE )
	ENDIF( NOT DEFINED INCLUDE_PERL )
	
	STRING( TOLOWER ${CMAKE_SYSTEM_NAME} OPERATING_SYSTEM )
	SET( BIN_ARCH_DIR ${CMAKE_SYSTEM_PROCESSOR}-${OPERATING_SYSTEM} )
	SET( LIB_ARCH_DIR ${CMAKE_SYSTEM_PROCESSOR}${ABI}-${OPERATING_SYSTEM} )
	# Using INSTALL_PREFIX instead of CMAKE_INSTALL_PREFIX just so that the
	# default value from CMAKE_INSTALL_PREFIX can be overriden
	SET( INSTALL_PREFIX "${CMISS_ROOT_LOCATION}/${BIN_ARCH_DIR}" CACHE PATH "Install prefix prepended to target to create install location" )
	SET( CMAKE_INSTALL_PREFIX "${CMISS_ROOT_LOCATION}" CACHE PATH "Prefix prepended to install directories if INSTALL_PREFIX is not absolute, immutable" FORCE )
	
	# Forcing a Debug or Release configuration
	IF( NOT ${CMAKE_BUILD_TYPE} MATCHES "Release|Debug" )
		SET( CMAKE_BUILD_TYPE "Release" )
	ENDIF( NOT ${CMAKE_BUILD_TYPE} MATCHES "Release|Debug" )
	MESSAGE( STATUS "CMAKE BUILD TYPE: ${CMAKE_BUILD_TYPE}" )
	IF( ${CMAKE_BUILD_TYPE} MATCHES "Debug" )
		SET( DEBUG_TARGET_SUFFIX "-debug" )
	ENDIF( ${CMAKE_BUILD_TYPE} MATCHES "Debug" )
	
	GET_PERL_API_STRING( )
	GET_PERL_ARCHLIB_DIR( )
	GET_PERL_C_FLAGS( )
	# Separate perl c flags into include directories, link
	# libraries and compiler flags.
	# Sets PERL_INCLUDE_DIRS, PERL_LINK_LIBRARIES and PERL_COMPILER_FLAGS
	SEPARATE_PERL_C_FLAGS( ${PERL_C_FLAGS} )
	
	#MESSAGE( STATUS "Bin arch dir: ${BIN_ARCH_DIR}, Lib arch dir: ${LIB_ARCH_DIR}" )
	INCLUDE_DIRECTORIES( ${PERL_INCLUDE_DIRS} )
	#SET( CMAKE_C_FLAGS ${CMAKE_C_FLAGS} ${PERL_C_FLAGS} )
	#SET( CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${PERL_CFLAGS} )
	SET( GENERATED_FILES_DIR ${PROJECT_BINARY_DIR}/generated_cmake )
	# Need to make the directory for the output of the custom command
	FILE( MAKE_DIRECTORY ${GENERATED_FILES_DIR} )
	
	SET( CMISS_PERL_WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/Perl_cmiss/generated_cmake/${BIN_ARCH_DIR}/${PERL_API_STRING} )
	# Replace "." and "-" with underscore to make a standard character string
	STRING( REGEX REPLACE "(\\.|-)" "_" PERL_API_STRING_STANDARD_CHARACTERS ${PERL_API_STRING} )
	IF( SHARED_OBJECT )
		SET( LIBRARY_TYPE_STRING "SHARED" )
		SET( CMISS_PERL_CALLBACK_SUFFIX ${PERL_API_STRING_STANDARD_CHARACTERS} )
	ELSE( SHARED_OBJECT )
		SET( LIBRARY_TYPE_STRING "STATIC" )
		SET( CMISS_PERL_CALLBACK_SUFFIX static )
		SET( CMISS_PERL_WORKING_DIRECTORY ${CMISS_PERL_WORKING_DIRECTORY}-static )
	ENDIF( SHARED_OBJECT )
	
	SET( CMISS_PERL_CALLBACK cmiss_perl_callback_${CMISS_PERL_CALLBACK_SUFFIX} )
	SET( CMISS_PERL_MAKEFILE ${CMISS_PERL_WORKING_DIRECTORY}/Makefile )
	SET( CMISS_PERL_LIB ${CMISS_PERL_WORKING_DIRECTORY}/auto/Perl_cmiss/Perl_cmiss.a )
	#MESSAGE( STATUS "Working dir: ${CMISS_PERL_WORKING_DIRECTORY}" )
	
	#IF( NOT DEFINED TASK )
	IF( ${TASK} MATCHES "INIT" )
		#MESSAGE( STATUS "Use dyn loader: ${USE_DYNAMIC_LOADER}" )
		IF( DEFINED USE_DYNAMIC_LOADER AND USE_DYNAMIC_LOADER )
			#MESSAGE( STATUS "Use dynamic loader has evaluated to true" )
			SET( SHARED_PERL_EXECUTABLES ${PERL_EXECUTABLE} )
			FOREACH( VERSION ${PERL_VERSIONS} )
				#MESSAGE( STATUS "Another perl version: ${VERSION}" )
			ENDFOREACH( VERSION ${PERL_VERSIONS} )
			SET( SHARED_PERL_API_STRINGS ${PERL_API_STRING} )
		ENDIF( DEFINED USE_DYNAMIC_LOADER AND USE_DYNAMIC_LOADER )
		IF( SHARED_PERL_EXECUTABLES )
			#MESSAGE( STATUS "Shared perl executables evaluated to true" )
			SET( USE_DYNAMIC_LOADER TRUE )
		ELSE( SHARED_PERL_EXECUTABLES )
			#MESSAGE( STATUS "Shared perl executables evaluated to false" )
			SET( USE_DYNAMIC_LOADER FALSE )
		ENDIF( SHARED_PERL_EXECUTABLES )
	ENDIF( ${TASK} MATCHES "INIT" )
	#ENDIF( NOT DEFINED TASK )
	
	SET( SET_STATIC_PERL_LIB FALSE )
	IF( NOT SHARED_OBJECT )
		SET( SET_STATIC_PERL_LIB TRUE )
	ELSE( NOT SHARED_OBJECT )
		IF( INCLUDE_PERL )
			SET( SET_STATIC_PERL_LIB TRUE )
		ENDIF( INCLUDE_PERL )
	ENDIF( NOT SHARED_OBJECT )
	
	IF( SET_STATIC_PERL_LIB )
		SET( SOURCES source/perl_interpreter.c )
		SET( STATIC_PERL_LIB ${PERL_ARCHLIB_DIR}/CORE/libperl.a )
		#ADD_LIBRARY( ${STATIC_PERL_LIB} STATIC IMPORTED)
		#SET_PROPERTY(TARGET ${STATIC_PERL_LIB} PROPERTY IMPORTED_LOCATION ${PERL_ARCHLIB_DIR}/CORE/libperl.a )
	ELSE( SET_STATIC_PERL_LIB )
		SET( NO_STATIC_FALLBACK TRUE )
		IF( SHARED_OBJECT )
			SET( SOURCES source/perl_interpreter.c )
		ENDIF( SHARED_OBJECT )
	ENDIF( SET_STATIC_PERL_LIB )
	
	#MESSAGE( STATUS "static perl: ${SET_STATIC_PERL_LIB}, shared object: ${SHARED_OBJECT}, use dynamic loader: ${USE_DYNAMIC_LOADER}" )
	#MESSAGE( STATUS "Shared perl api strings:  ${SHARED_PERL_API_STRINGS}" )
	
	IF( USE_DYNAMIC_LOADER )
		SET( SOURCES ${SOURCES} source/perl_interpreter_dynamic.c )
		SET( BASE64_FILES ${GENERATED_FILES_DIR}/libperlinterpreter.soh )
		SET( SHARED_SUFFIX "-dynamic" )
		SET( SHARED_LIB_SUFFIX "-dynamic" )
	ELSE( USE_DYNAMIC_LOADER )
		IF( EXISTS ${PERL_ARCHLIB_DIR}/auto/Dynaloader/Dynaloader.a )
			SET( DYNLOADER_LIB ${PERL_ARCHLIB_DIR}/auto/Dynaloader/Dynaloader.a )
		ENDIF( EXISTS ${PERL_ARCHLIB_DIR}/auto/Dynaloader/Dynaloader.a )
		SET( PM_FILES DynaLoader.pm )
		IF( SHARED_OBJECT )
			SET( SHARED_SUFFIX "-shared" )
		ENDIF( SHARED_OBJECT )
	ENDIF( USE_DYNAMIC_LOADER )
	
	#MESSAGE( STATUS ${PERL_API_STRING} )
	#MESSAGE( STATUS ${CMISS_PERL_CALLBACK} )
	#MESSAGE( STATUS ${PERL_C_FLAGS} )
	#FOREACH( DIR ${PERL_INCLUDE_DIRS} )
	#	MESSAGE( STATUS "dir: " ${DIR} )
	#ENDFOREACH( DIR ${PERL_INCLUDE_DIRS} )
	
	IF( ${TASK} MATCHES "INIT" )
		
		MESSAGE( STATUS "INIT: perl callback: ${CMISS_PERL_CALLBACK}, working dir: ${CMISS_PERL_WORKING_DIRECTORY}" )
		MESSAGE( STATUS "INIT: Switches: ${USE_DYNAMIC_LOADER}, ${SHARED_OBJECT}, ${SET_STATIC_PERL_LIB}" )
	#	add_custom_target(Name [ALL] [command1 [args1...]]
	#	                    [COMMAND command2 [args2...] ...]
	#  [DEPENDS depend depend depend ... ]
	# [WORKING_DIRECTORY dir]
	# [COMMENT commment]	[VERBATIM]
	#[SOURCES src1 [src2...]])
		ADD_CUSTOM_TARGET( PERL_CMISS_MAKEFILE ALL
			COMMAND ${CMAKE_COMMAND}
			-E chdir ${PROJECT_SOURCE_DIR}/Perl_cmiss ${PERL_EXECUTABLE}
			Makefile_cmake.PL ${CMISS_PERL_CALLBACK} ${CMISS_PERL_WORKING_DIRECTORY} 
			COMMENT "Running PERL_CMISS_MAKEFILE CMISS_PERL_CALLBACK=${CMISS_PERL_CALLBACK} WORKING_DIR=${CMISS_PERL_WORKING_DIRECTORY}" )
	
		SET( PERL_CMISS_COMMENT_STRING "Making ${PERL_API_STRING}" )
		IF( NOT SHARED_OBJECT )
			SET( PERL_CMISS_COMMENT_STRING "${PERL_CMISS_COMMENT_STRING}-static" )
		ENDIF( NOT SHARED_OBJECT )
		ADD_CUSTOM_TARGET( MAKE_PERL_CMISS ALL
			COMMAND make --directory=${CMISS_PERL_WORKING_DIRECTORY} static
			COMMENT ${PERL_CMISS_COMMENT_STRING} )
		ADD_DEPENDENCIES( MAKE_PERL_CMISS PERL_CMISS_MAKEFILE )

		IF( NOT USE_DYNAMIC_LOADER )
			ADD_CUSTOM_TARGET( PERL_SHARED_EXECUTABLES_MAKEFILE ALL
				COMMAND ${CMAKE_COMMAND} -DTASK=INIT -DUSE_DYNAMIC_LOADER=TRUE -DSHARED_OBJECT=FALSE
				-DCMISS_PERL=${PERL_EXECUTABLE} -DSHARED_PERL_API_STRINGS= ${CMAKE_SOURCE_DIR}
				COMMENT "Running PERL_SHARED_EXECUTABLES_MAKEFILE CMISS_PERL=${PERL_EXECUTABLE}"
				COMMAND make )
			ADD_DEPENDENCIES( PERL_SHARED_EXECUTABLES_MAKEFILE PERL_CMISS_MAKEFILE )
		ELSE( NOT USE_DYNAMIC_LOADER )
		ENDIF( NOT USE_DYNAMIC_LOADER )
	
		#MESSAGE( STATUS "Setting up with: ${USE_DYNAMIC_LOADER} ${SHARED_PERL_API_STRINGS}" )
		ADD_CUSTOM_TARGET( MAKE_SOURCE ALL
			COMMAND ${CMAKE_COMMAND} -DUSE_DYNAMIC_LOADER=${USE_DYNAMIC_LOADER} -DSHARED_OBJECT=${SHARED_OBJECT}
			-DSHARED_PERL_API_STRINGS=${SHARED_PERL_API_STRINGS} -DTASK=SOURCE ${CMAKE_SOURCE_DIR}
			COMMAND make --no-print-directory COMMENT "Making something sourcey" )
		ADD_DEPENDENCIES( MAKE_SOURCE MAKE_PERL_CMISS )
	
		ADD_CUSTOM_TARGET( MAKE_LIBRARY ALL
			COMMAND ${CMAKE_COMMAND} -DUSE_DYNAMIC_LOADER=${USE_DYNAMIC_LOADER}
			-DSHARED_OBJECT=${SHARED_OBJECT} -DTASK=LIBRARY ${CMAKE_SOURCE_DIR}
			COMMAND make --no-print-directory
			COMMENT "Making something libraryry" )
		ADD_DEPENDENCIES( MAKE_LIBRARY MAKE_SOURCE )
		
	
	
	ELSE( ${TASK} MATCHES "INIT" )
		IF( ${TASK} MATCHES "SOURCE" )
	
			#MESSAGE( STATUS "Hooray doing source stuff" )
			#MESSAGE( STATUS "  ${SHARED_PERL_API_STRINGS}" )
			#MESSAGE( STATUS "  ${PERL_API_STRING}" )
		
			IF( USE_DYNAMIC_LOADER )
				SET( PERLINTERPRETER_SHARED_LIB_HEADER
					lib_cmake/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}-shared/lib${LIBRARY_NAME}${DEBUG_TARGET_SUFFIX}.soh )
				CONFIGURE_FILE( "${PROJECT_SOURCE_DIR}/templates/static_version.h.template"
					"${GENERATED_FILES_DIR}/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}${SHARED_SUFFIX}/static_version.h" )
				CONFIGURE_FILE( "${PROJECT_SOURCE_DIR}/templates/dynamic_versions.h.template"
					"${GENERATED_FILES_DIR}/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}${SHARED_SUFFIX}/dynamic_versions.h" )
				#	 Above command needs to define this
				#SET( PERLINTERPRETER_SHARED_LIB_HEADER
				#	${PROJECT_SOURCE_DIR}/lib_cmake/${LIB_ARCH_DIR}/${PERL_API_STRING}${SHARED_LIB_SUFFIX}/libperlinterpreter${DEBUG_TARGET_SUFFIX}.soh )
				#SET_SOURCE_FILES_PROPERTIES( ${GENERATED_FILES_DIR}/libperlinterpreter${DEBUG_TARGET_SUFFIX}.soh
				#	PROPERTIES HEADER_FILE_ONLY TRUE
				#	GENERATED TRUE
				#	OBJECT_DEPENDS source/perl_interpreter_dynamic.c )
			ENDIF( USE_DYNAMIC_LOADER )
				
		ENDIF( ${TASK} MATCHES "SOURCE" )
		IF( ${TASK} MATCHES "LIBRARY" )
			#MESSAGE( STATUS "Hooray doing library stuff not yet fill me out baby" )
			FILE( MAKE_DIRECTORY ${GENERATED_FILES_DIR}/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}${SHARED_SUFFIX} )
			# These are the files we want to convert to header? files
			SET( PM_FILES ${PM_FILES} strict.pm Balanced.pm Perl_cmiss.pm )
			FOREACH( PM_FILE ${PM_FILES} )
				# This is where we want the converted files to go
				SET( PMH_FILE ${GENERATED_FILES_DIR}/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}${SHARED_SUFFIX}/${PM_FILE}h )
				# This is the location of the files to be converted
				SET( PM_FILE_ABSPATH ${PROJECT_SOURCE_DIR}/source/${PM_FILE} )
				# DynaLoader.pm comes from somewhere in the system
				IF( ${PM_FILE} MATCHES "DynaLoader.pm" )
					SET( PM_FILE_ABSPATH ${PERL_ARCHLIB_DIR}/DynaLoader.pm )
				ENDIF( ${PM_FILE} MATCHES "DynaLoader.pm" )
			
				# Execute the pm2pmh command, is ">" redirection portable?
				# no probably not, going for modifying pm2pmh perl script
				ADD_CUSTOM_COMMAND( OUTPUT ${PMH_FILE}
					COMMAND ${PROJECT_SOURCE_DIR}/utilities/pm2pmh_cmake
					ARGS ${PM_FILE_ABSPATH} ${PMH_FILE} )

				# Trying various ways to make CMake run this custom command before
				# compiling the source code.  Setting the generated header files directly
				# into the library compilation works, but is it the best way?
				SET_SOURCE_FILES_PROPERTIES( ${PMH_FILE} PROPERTIES HEADER_FILE_ONLY TRUE
					GENERATED TRUE )
				SET( PMH_FILES ${PMH_FILES} ${PMH_FILE} )
			ENDFOREACH( PM_FILE $PM_FILES )

			IF( USE_DYNAMIC_LOADER )
				# Execute bin2base64h command
				SET( PERLINTERPRETER_SHARED_LIB_HEADER 
					lib_cmake/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}-shared/lib${LIBRARY_NAME}${DEBUG_TARGET_SUFFIX}.soh )
				ADD_CUSTOM_COMMAND( OUTPUT ${PERLINTERPRETER_SHARED_LIB_HEADER}
					COMMAND ${CMISS_ROOT_LOCATION}/utilities/bin/${BIN_ARCH_DIR}/bin2base64h
						${PROJECT_BINARY_DIR}/lib_cmake/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}-shared/lib${LIBRARY_NAME}${DEBUG_TARGET_SUFFIX}.so
						${PROJECT_BINARY_DIR}/lib_cmake/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}-shared/lib${LIBRARY_NAME}${DEBUG_TARGET_SUFFIX}.soh )
				SET_SOURCE_FILES_PROPERTIES( ${PERLINTERPRETER_SHARED_LIB_HEADER} PROPERTIES HEADER_FILE_ONLY TRUE
					GENERATED TRUE )
			ENDIF( USE_DYNAMIC_LOADER )
			
			#MESSAGE( STATUS "Perl shared LIB: ${PERLINTERPRETER_SHARED_LIB_HEADER} " )
			#MESSAGE( STATUS "ROOT: ${CMISS_ROOT_LOCATION}/utilities/bin/${BIN_ARCH_DIR}/bin2base64h " )
			#ADD_CUSTOM_TARGET( MAKE_INSTALL_DIRS ALL
			#	COMMAND ${CMAKE_COMMAND}
			#	-E make_directory ${GENERATED_FILES_DIR}/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}${SHARED_SUFFIX} )
			#	COMMAND ${CMAKE_COMMAND}
			#	-E make_directory lib/${BIN_ARCH_DIR}/${PERL_API_STRING}${SHARED_SUFFIX} )
	
			SET( LIBRARY_DEFINITIONS -DPERL_VERSION_ARCHNAME=\"${PERL_API_STRING}\"
				-DABI_ENV=\"64\" -Dbool=char -DHAS_BOOL
				-DCMISS_PERL_CALLBACK=${CMISS_PERL_CALLBACK} )
			IF( SHARED_OBJECT )
				SET( LIBRARY_DEFINITIONS ${LIBRARY_DEFINITIONS} -DSHARED_OBJECT )
			ENDIF( SHARED_OBJECT )
			IF( USE_DYNAMIC_LOADER )
				SET( LIBRARY_DEFINITIONS ${LIBRARY_DEFINITIONS} -DUSE_DYNAMIC_LOADER )
			ENDIF( USE_DYNAMIC_LOADER )
			ADD_DEFINITIONS( ${LIBRARY_DEFINITIONS} )
			INCLUDE_DIRECTORIES( ${GENERATED_FILES_DIR}/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}${SHARED_SUFFIX} ${PROJECT_BINARY_DIR} )
			LINK_LIBRARIES( ${PERL_LINK_LIBRARIES} )
			#LINK_DIRECTORIES( ${PERL_LINK_LIBRARY_DIRS} )

			IF( ${LIBRARY_TYPE_STRING} MATCHES "STATIC" AND NOT DEFINED WIN32 )
				SET( ARCHIVE_DIR ${GENERATED_FILES_DIR}/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}${SHARED_SUFFIX}/archive_members )
				MESSAGE( STATUS "MAKE DIRECTORY: ${ARCHIVE_DIR}" )
				FILE( MAKE_DIRECTORY ${ARCHIVE_DIR} )
				FOREACH( STATIC_LIB ${CMISS_PERL_LIB} ${DYNALOADER_LIB} ${STATIC_PERL_LIB} )
					MESSAGE( STATUS "EXECUTING PROCESS: ${STATIC_LIB}" )
					EXECUTE_PROCESS( COMMAND ar x ${STATIC_LIB}
						WORKING_DIRECTORY ${ARCHIVE_DIR} )
				ENDFOREACH( STATIC_LIB )
				FILE( GLOB ARCHIVE_OBJECTS ${ARCHIVE_DIR}/*.o )

#execute_process(COMMAND <cmd1> [args1...]]
#                  [COMMAND <cmd2> [args2...] [...]]
#									                  [WORKING_DIRECTORY <directory>]
				#SET( STATIC_LIBRARY_HACK "${DYNALOADER_LIB} ${CMISS_PERL_LIB}" )
				#IF( SET_STATIC_PERL_LIB )
				#	SET( STATIC_LIBRARY_HACK "${STATIC_LIBRARY_HACK} ${STATIC_PERL_LIB}" )
				#ENDIF( SET_STATIC_PERL_LIB )
				#SET_TARGET_PROPERTIES( ${LIBRARY_NAME} PROPERTIES STATIC_LIBRARY_FLAGS "${STATIC_LIBRARY_HACK}" )
			ENDIF( ${LIBRARY_TYPE_STRING} MATCHES "STATIC" AND NOT DEFINED WIN32 )
			
			ADD_LIBRARY( ${LIBRARY_NAME} ${LIBRARY_TYPE_STRING} ${SOURCES}
			${PMH_FILES} ${PERLINTERPRETER_SHARED_LIB_HEADER} ${ARCHIVE_OBJECTS} )
			# Allows me to install debug and release versions into the same directory
			IF( DEFINED DEBUG_TARGET_SUFFIX )
				SET_TARGET_PROPERTIES( ${LIBRARY_NAME} PROPERTIES DEBUG_POSTFIX ${DEBUG_TARGET_SUFFIX} )
			ENDIF( DEFINED DEBUG_TARGET_SUFFIX )
			IF( ${LIBRARY_TYPE_STRING} MATCHES "SHARED" )
				SET_TARGET_PROPERTIES( ${LIBRARY_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY 
					lib_cmake/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}${SHARED_SUFFIX} )
			ENDIF( ${LIBRARY_TYPE_STRING} MATCHES "SHARED" )
			IF( ${LIBRARY_TYPE_STRING} MATCHES "STATIC" )
				SET_TARGET_PROPERTIES( ${LIBRARY_NAME} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY 
					lib_cmake/${BIN_ARCH_DIR}/${PERL_API_STRING}${DEBUG_TARGET_SUFFIX}${SHARED_SUFFIX} )
			ENDIF( ${LIBRARY_TYPE_STRING} MATCHES "STATIC" )

			IF( NOT USE_DYNAMIC_LOADER )
				SET( CMISS_PERL_LIB
					${PROJECT_SOURCE_DIR}/Perl_cmiss/generated_cmake/x86_64-linux/5.8.0-64bitall-perlio-static/auto/Perl_cmiss/Perl_cmiss.a )
				SET( DYNALOADER_LIB
					/usr/lib64/perl5/5.8.8/x86_64-linux/auto/DynaLoader/DynaLoader.a )				
			ENDIF( NOT USE_DYNAMIC_LOADER )
			#SET( CMISS_PERL_LIB "blubblub" )
			#	${PROJECT_SOURCE_DIR}/Perl_cmiss/generated/x86_64-linux/5.8.0-64bitall-perlio-static/auto/Perl_cmiss/Perl_cmiss.a )
			#ADD_LIBRARY( ${CMISS_PERL_LIB} STATIC IMPORTED)
			#SET_PROPERTY(TARGET ${CMISS_PERL_LIB} PROPERTY IMPORTED_LOCATION
			#	${PROJECT_SOURCE_DIR}/Perl_cmiss/generated_cmake/x86_64-linux/5.8.0-64bitall-perlio-static/auto/Perl_cmiss/Perl_cmiss.a )
		
			TARGET_LINK_LIBRARIES( ${LIBRARY_NAME} ${CMISS_PERL_LIB} ${DYNALOADER_LIB} ${ARCHIVE_OBJECTS} )

			#MESSAGE( STATUS ${LIBRARY_NAME} " " ${LIBRARY_TYPE_STRING} )
			#FOREACH( SOURCE_FILE ${SOURCES} )
			#MESSAGE( STATUS ${SOURCE_FILE} )
			#ENDFOREACH( SOURCE_FILE ${SOURCES} )
			#MESSAGE( STATUS ${TARGET_POSTFIX} " " ${TARGET_PREFIX} )
				
			MESSAGE( STATUS "INSTALL PREFIX: ${INSTALL_PREFIX}" )
			INSTALL( TARGETS ${LIBRARY_NAME} DESTINATION ${INSTALL_PREFIX}/lib )
			#SET_TARGET_PROPERTIES( ${LIBRARY_NAME}  PROPERTIES LINKER_LANGUAGE C )
		ENDIF( ${TASK} MATCHES "LIBRARY" )
	ENDIF( ${TASK} MATCHES "INIT" )
ENDIF( NOT DEFINED TASK )



